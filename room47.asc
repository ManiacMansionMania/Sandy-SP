// Vorratsraum (Familie Pantz)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
  aMusic30.Play();
  // script for Room: Player enters screen (before fadein)
  oTuer.init_object(23);
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if (any_click_on_door(23, oTuer, 24, 123, eDirectionLeft, 44, 267, 120, eDirectionDown) == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oWaschmaschine_AnyClick()
{
	if (any_click_move(362, 126, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Walk(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Unsere Waschmaschine.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe gerade keine dreckige Wäsche.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich habe gerade keine dreckige Wäsche.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die ist schon zu.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich kann die nicht bewegen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich kann die nicht bewegen.");
		}
		else Unhandled(); 
	}
}

function oTrockner_AnyClick()
{
	if (any_click_move(433, 126, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Walk(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Unser Trockner.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe gerade keine nasse Wäsche.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich habe gerade keine nasse Wäsche.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist schon zu.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich kann ihn nicht bewegen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich kann ihn nicht bewegen.");
		}
		else Unhandled(); 
	}
}

function oAbluftrohr_AnyClick()
{
	if (any_click_move(450, 126, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Walk(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das Abluftrohr für den Trockner.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Brauche ich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich wüsste nicht womit.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich könnte es mit mitnehmen versuchen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ist doch schon angeschlossen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich kann es nicht bewegen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich kann es nicht bewegen.");
		}
		else Unhandled(); 
	}
}

int RegalTemp = 0;
// Dinge im Regal
function Pfirsich()
{
	if (any_click_move(118, 122, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt)){
			Wait(5);
			player.Say("Eine Dose mit Pfirsichen.");
		}
		else if (UsedAction(eActPickUp)){
			Wait(5);
			//player.Say("Brauche ich momentan nicht.");
			if ( player.InventoryQuantity[iPfirsichdose.ID] < 1 )
			{
				RegalTemp = 1;
			}
			else
			{
				player.Say("Ich habe schon eine Pfirsichdose");
			}
		}
		else if (UsedAction(eActUse)){
			Wait(5);
			player.Say("Brauche ich nicht.");
		}
		else if (UsedAction(eActOpen)){
			Wait(5);
			player.Say("Dazu müsste ich sie erst einmal nehmen.");
		}
		else if (UsedAction(eActClose)){
			Wait(5);
			player.Say("Ist schon zu.");
		}
		else if (UsedAction(eActPush)){
			Wait(5);
			player.Say("Warum sollte ich sie Drücken?");
		}
		else if (UsedAction(eActPull)){
			Wait(5);
			player.Say("Warum sollte ich sie Ziehen?");
		}
		else Unhandled(); 
	}
}

function oPfirsiche01_AnyClick()
{
	Pfirsich();
	if ( 1 == RegalTemp )
	{
		oPfirsiche01.Visible = false;
		player.AddInventory(iPfirsichdose);
		RegalTemp = 0;
	}
}
function oPfirsiche02_AnyClick()
{
	Pfirsich();
	if ( 1 == RegalTemp )
	{
		oPfirsiche02.Visible = false;
		player.AddInventory(iPfirsichdose);
		RegalTemp = 0;
	}
}

function oPfirsiche03_AnyClick()
{
	Pfirsich();
	if ( 1 == RegalTemp )
	{
		oPfirsiche03.Visible = false;
		player.AddInventory(iPfirsichdose);
		RegalTemp = 0;
	}
}

function oGurken01_AnyClick()
{
	if (any_click_move(213, 122, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt)){
			Wait(5);
			player.Say("Ein Glas Gurken.");
		}
		else if (UsedAction(eActPickUp)){
			Wait(5);
			player.Say("Brauche ich momentan nicht.");
		}
		else if (UsedAction(eActUse)){
			Wait(5);
			player.Say("Brauche ich nicht.");
		}
		else if (UsedAction(eActOpen)){
			Wait(5);
			player.Say("Dazu müsste ich sie erst einmal nehmen.");
		}
		else if (UsedAction(eActClose)){
			Wait(5);
			player.Say("Ist schon zu.");
		}
		else if (UsedAction(eActPush)){
			Wait(5);
			player.Say("Warum sollte ich sie Drücken?");
		}
		else if (UsedAction(eActPull)){
			Wait(5);
			player.Say("Warum sollte ich sie Ziehen?");
		}
		else Unhandled(); 
	}
}

function oGurken02_AnyClick()
{
	oGurken01_AnyClick();
}

function oGurken03_AnyClick()
{
	oGurken01_AnyClick();
}

function oGurken04_AnyClick()
{
	oGurken01_AnyClick();
}

function oGurken05_AnyClick()
{
	oGurken01_AnyClick();
}

function oKraecker01_AnyClick()
{
	if (any_click_move(172, 122, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt)){
			Wait(5);
			player.Say("Eine Packung Kräcker.");
		}
		else if (UsedAction(eActPickUp)){
			Wait(5);
			player.Say("Brauche ich momentan nicht.");
		}
		else if (UsedAction(eActUse)){
			Wait(5);
			player.Say("Brauche ich nicht.");
		}
		else if (UsedAction(eActOpen)){
			Wait(5);
			player.Say("Dazu müsste ich sie erst einmal nehmen.");
		}
		else if (UsedAction(eActClose)){
			Wait(5);
			player.Say("Ist schon zu.");
		}
		else if (UsedAction(eActPush)){
			Wait(5);
			player.Say("Warum sollte ich sie Drücken?");
		}
		else if (UsedAction(eActPull)){
			Wait(5);
			player.Say("Warum sollte ich sie Ziehen?");
		}
		else Unhandled(); 
	}
}

function oNudeln01_AnyClick()
{
	if (any_click_move(127, 122, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt)){
			Wait(5);
			player.Say("Eine Packung Nudeln.");
		}
		else if (UsedAction(eActPickUp)){
			Wait(5);
			player.Say("Brauche ich momentan nicht.");
		}
		else if (UsedAction(eActUse)){
			Wait(5);
			player.Say("Brauche ich nicht.");
		}
		else if (UsedAction(eActOpen)){
			Wait(5);
			player.Say("Dazu müsste ich sie erst einmal nehmen.");
		}
		else if (UsedAction(eActClose)){
			Wait(5);
			player.Say("Ist schon zu.");
		}
		else if (UsedAction(eActPush)){
			Wait(5);
			player.Say("Warum sollte ich sie Drücken?");
		}
		else if (UsedAction(eActPull)){
			Wait(5);
			player.Say("Warum sollte ich sie Ziehen?");
		}
		else Unhandled(); 
	}
}

function oNudeln02_AnyClick()
{
	oNudeln01_AnyClick();
}

function oNudeln03_AnyClick()
{
	oNudeln01_AnyClick();
}


function oReinigungsmittel1_AnyClick()
{
	if (any_click_move(275, 122, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt)){
			Wait(5);
			player.Say("Reinigungsmittel.");
		}
		else if (UsedAction(eActPickUp)){
			Wait(5);
			player.Say("Brauche ich momentan nicht.");
		}
		else if (UsedAction(eActUse)){
			Wait(5);
			player.Say("Brauche ich nicht.");
		}
		else if (UsedAction(eActOpen)){
			Wait(5);
			player.Say("Dazu müsste ich sie erst einmal nehmen.");
		}
		else if (UsedAction(eActClose)){
			Wait(5);
			player.Say("Ist schon zu.");
		}
		else if (UsedAction(eActPush)){
			Wait(5);
			player.Say("Warum sollte ich sie Drücken?");
		}
		else if (UsedAction(eActPull)){
			Wait(5);
			player.Say("Warum sollte ich sie Ziehen?");
		}
		else Unhandled(); 
	}
}

function oReinigungsmittel2_AnyClick()
{
oReinigungsmittel1_AnyClick();
}

function oPutzlappen1_AnyClick()
{
	if (any_click_move(275, 122, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt)){
			Wait(5);
			player.Say("Ein Putzlappen.");
		}
		else if (UsedAction(eActPickUp)){
			Wait(5);
			player.Say("Brauche ich momentan nicht.");
		}
		else if (UsedAction(eActUse)){
			Wait(5);
			player.Say("Brauche ich nicht.");
		}
		else if (UsedAction(eActOpen)){
			Wait(5);
			player.Say("Dazu müsste ich ihn erst einmal nehmen.");
		}
		else if (UsedAction(eActClose)){
			Wait(5);
			player.Say("Ist schon zu.");
		}
		else if (UsedAction(eActPush)){
			Wait(5);
			player.Say("Warum sollte ich ihn Drücken?");
		}
		else if (UsedAction(eActPull)){
			Wait(5);
			player.Say("Warum sollte ich ihn Ziehen?");
		}
		else Unhandled(); 
	}
}

function oPutzlappen2_AnyClick()
{
	oPutzlappen1_AnyClick();
}


function oBesen_AnyClick()
{
	if (any_click_move(52, 122, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt)){
			Wait(5);
			player.Say("Mit diesem Besen muss ich ab und zu unseren Bürgersteig kehren.");
		}
		else if (UsedAction(eActPickUp)){
			Wait(5);
			player.Say("Brauche ich momentan nicht.");
		}
		else if (UsedAction(eActUse)){
			Wait(5);
			player.Say("Um damit was zu kehren?");
		}
		else if (UsedAction(eActOpen)){
			Wait(5);
			player.Say("Das würde ihn nur zerstören.");
		}
		else if (UsedAction(eActClose)){
			Wait(5);
			player.Say("Da gibt es nichts zu zu machen.");
		}
		else if (UsedAction(eActPush)){
			Wait(5);
			player.Say("Warum sollte ich ihn Drücken?");
		}
		else if (UsedAction(eActPull)){
			Wait(5);
			player.Say("Warum sollte ich ihn Ziehen?");
		}
		else Unhandled(); 
	}
}

function oSchrubber_AnyClick()
{
	if (any_click_move(52, 122, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt)){
			Wait(5);
			player.Say("Mit diesem Schrubber muss ich ab und zu unter anderem auch unseren Flur säubern.");
		}
		else if (UsedAction(eActPickUp)){
			Wait(5);
			player.Say("Brauche ich momentan nicht.");
		}
		else if (UsedAction(eActUse)){
			Wait(5);
			player.Say("Um damit was zu schrubben?");
		}
		else if (UsedAction(eActOpen)){
			Wait(5);
			player.Say("Das würde ihn nur zerstören.");
		}
		else if (UsedAction(eActClose)){
			Wait(5);
			player.Say("Da gibt es nichts zu zu machen.");
		}
		else if (UsedAction(eActPush)){
			Wait(5);
			player.Say("Warum sollte ich ihn Drücken?");
		}
		else if (UsedAction(eActPull)){
			Wait(5);
			player.Say("Warum sollte ich ihn Ziehen?");
		}
		else Unhandled(); 
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hRegal_AnyClick()
{
	if (any_click_move(194, 131, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt)){
			Wait(5);
			player.Say("Das ist unser Regal. Hier stehen normalerweise unsere Lebensmittel.");
		}
		else if (UsedAction(eActPickUp)){
			Wait(5);
			player.Say("Das ist mir zu schwer.");
		}
		else if (UsedAction(eActUse)){
			Wait(5);
			player.Say("Mit was?");
		}
		else if (UsedAction(eActOpen)){
			Wait(5);
			player.Say("Das ist kein Schrank.");
		}
		else if (UsedAction(eActClose)){
			Wait(5);
			player.Say("Das ist kein Schrank.");
		}
		else if (UsedAction(eActPush)){
			Wait(5);
			player.Say("Zu schwer.");
		}
		else if (UsedAction(eActPull)){
			Wait(5);
			player.Say("Zu schwer.");
		}
		else Unhandled(); 
	}
}

function hAbfluss_AnyClick()
{
	if (any_click_move(347, 132, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt)){
			Wait(5);
			player.Say("Das ist unser Abfluß. Falls mal was aus der Waschmaschine ausläuft.");
		}
		else if (UsedAction(eActPickUp)){
			Wait(5);
			player.Say("Der ist festgemauert.");
		}
		else if (UsedAction(eActUse)){
			Wait(5);
			player.Say("Mit was?");
		}
		else if (UsedAction(eActOpen)){
			Wait(5);
			player.Say("Ich seh nichts interessantes darunter.");
		}
		else if (UsedAction(eActClose)){
			Wait(5);
			player.Say("Ist schon zu.");
		}
		else if (UsedAction(eActPush)){
			Wait(5);
			player.Say("Bewegt sich nicht.");
		}
		else if (UsedAction(eActPull)){
			Wait(5);
			player.Say("Ich seh nichts interessantes darunter, dass mich veranlassen könnte den Abfluß zu öffnen.");
		}
		else Unhandled(); 
	}
}

function hSteckdoseLinks_AnyClick()
{
	if (any_click_move(323, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist eine unserer neuen, amerikanischen Steckdosen.");
			player.Say("Nachdem Vater alle Stecker neu gekauft hatte, konnten wir umrüsten.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich kann sie doch nicht einfach so rausziehen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich kann es nicht bewegen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich kann es nicht bewegen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Was soll ich da öffnen?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Was soll ich da schließen?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Brrrr ... das kitzelt.");
		}
		else Unhandled();
	}
}


function hSteckdoseRechts_AnyClick()
{
	if (any_click_move(397, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist eine unserer neuen, amerikanischen Steckdosen.");
			player.Say("Nachdem Vater alle Stecker neu gekauft hatte, konnten wir umrüsten.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich kann sie doch nicht einfach so rausziehen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich kann es nicht bewegen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich kann es nicht bewegen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Was soll ich da öffnen?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Was soll ich da schließen?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Brrrr ... das kitzelt.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/

function oStaubsauger_AnyClick()
{
	if (any_click_move(446, 129, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Unser Staubsauger.");
			player.Say("Den brauche ich zum Glück ganz selten.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Und dann?");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Hab ich gemacht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Damit mir der Staubbeutel herausfällt?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu schließen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wozu?");
		}
		else Unhandled();
	}
}
